{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: []\n};\nexport const cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  console.log(state);\n  consolelog(payload);\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      // Check if the product is already in the cart\n      const existingItem = state.Carts.find(item => item._id === payload._id);\n      if (existingItem) {\n        // If the product exists, update its quantity using map\n        console.log(existingItem._id);\n        console.log(payload._id);\n        return {\n          ...state,\n          Carts: state.Carts.map(item => item._id === payload._id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item),\n          numberCart: state.numberCart + 1\n        };\n      } else {\n        // If the product is not in the cart, add it\n        const newItem = {\n          ...payload,\n          quantity: 1\n        };\n        console.log(newItem);\n        return {\n          ...state,\n          Carts: [...state.Carts, newItem],\n          numberCart: state.numberCart + 1\n        };\n      }\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      console.log(state);\n      return {\n        ...state,\n        productData: payload\n      };\n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter(item => item._id !== payload),\n        numberCart: state.numberCart - 1\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","Carts","productData","cartReducer","state","type","payload","console","log","consolelog","GET_NUMBER_CART","ADD_TO_CART","existingItem","find","item","_id","map","quantity","newItem","FETCH_PRODUCT_DATA_SUCCESS","REMOVE_FROM_CART","filter"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/reducers/CartReducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: [],\n}\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n  console.log(state)\n  consolelog(payload)\n\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n      case ActionTypes.ADD_TO_CART:\n  // Check if the product is already in the cart\n  const existingItem = state.Carts.find(item => item._id === payload._id);\n \n  if (existingItem) {\n    // If the product exists, update its quantity using map\n    console.log(existingItem._id);\n    console.log(payload._id);\n    return {\n      ...state,\n      Carts: state.Carts.map(item =>\n    \n        item._id === payload._id ? { ...item, quantity: item.quantity + 1 } : item\n      ),\n      numberCart: state.numberCart + 1,\n    };\n  } else {\n    // If the product is not in the cart, add it\n    const newItem = {\n      ...payload,\n      quantity: 1,\n    };\n    console.log(newItem)\n    return {\n      ...state,\n      Carts: [...state.Carts, newItem],\n      numberCart: state.numberCart + 1,\n    };\n  }\n\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      console.log(state);\n \n\n      return {\n        ...state,\n        productData: payload,\n      };\n     \n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter((item) => item._id !== payload),\n        numberCart: state.numberCart - 1,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACtEC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClBK,UAAU,CAACH,OAAO,CAAC;EAEnB,QAAQD,IAAI;IACV,KAAKP,WAAW,CAACY,eAAe;MAC9B,OAAO;QACL,GAAGN;MACL,CAAC;IACD,KAAKN,WAAW,CAACa,WAAW;MAChC;MACA,MAAMC,YAAY,GAAGR,KAAK,CAACH,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKT,OAAO,CAACS,GAAG,CAAC;MAEvE,IAAIH,YAAY,EAAE;QAChB;QACAL,OAAO,CAACC,GAAG,CAACI,YAAY,CAACG,GAAG,CAAC;QAC7BR,OAAO,CAACC,GAAG,CAACF,OAAO,CAACS,GAAG,CAAC;QACxB,OAAO;UACL,GAAGX,KAAK;UACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACe,GAAG,CAACF,IAAI,IAEzBA,IAAI,CAACC,GAAG,KAAKT,OAAO,CAACS,GAAG,GAAG;YAAE,GAAGD,IAAI;YAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;UAAE,CAAC,GAAGH,IACxE,CAAC;UACDd,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMkB,OAAO,GAAG;UACd,GAAGZ,OAAO;UACVW,QAAQ,EAAE;QACZ,CAAC;QACDV,OAAO,CAACC,GAAG,CAACU,OAAO,CAAC;QACpB,OAAO;UACL,GAAGd,KAAK;UACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEiB,OAAO,CAAC;UAChClB,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH;IAEE,KAAKF,WAAW,CAACqB,0BAA0B;MACzCZ,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAGlB,OAAO;QACL,GAAGA,KAAK;QACRF,WAAW,EAAEI;MACf,CAAC;IAEH,KAAKR,WAAW,CAACsB,gBAAgB;MAC/B,OAAO;QACL,GAAGhB,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACoB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKT,OAAO,CAAC;QACzDN,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACjC,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}