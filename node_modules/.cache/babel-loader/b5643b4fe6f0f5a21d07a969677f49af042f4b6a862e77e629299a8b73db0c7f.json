{"ast":null,"code":"import axios from \"axios\";\nimport { ActionTypes } from \"../constants/action-types\";\nexport const addToCart = product => {\n  return {\n    type: ActionTypes.ADD_TO_CART,\n    payload: product\n  };\n};\nexport const fetchProductDataForCartItems = cartItems => {\n  return async dispatch => {\n    try {\n      // Your asynchronous API call to fetch product data here...\n      // You can use Axios or any other library for the API call.\n\n      const productDataPromises = cartItems.map(item => axios.get(`https://fakestoreapi.com/products/${item.Id}`));\n      const productDataResponses = await Promise.all(productDataPromises);\n      const productsWithData = productDataResponses.map((response, index) => ({\n        ...response.data,\n        quantity: cartItems[index].quantity\n      }));\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_SUCCESS,\n        payload: productsWithData\n      });\n    } catch (error) {\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","ActionTypes","addToCart","product","type","ADD_TO_CART","payload","fetchProductDataForCartItems","cartItems","dispatch","productDataPromises","map","item","get","Id","productDataResponses","Promise","all","productsWithData","response","index","data","quantity","FETCH_PRODUCT_DATA_SUCCESS","error","FETCH_PRODUCT_DATA_FAILURE","message"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/actions/cart-actions.js"],"sourcesContent":["import axios from \"axios\";\nimport { ActionTypes } from \"../constants/action-types\"\n\nexport const addToCart=(product)=>{\n    return{\n        type: ActionTypes.ADD_TO_CART,\n        payload: product\n    }\n        \n}\n\n\n\nexport const fetchProductDataForCartItems = (cartItems) => {\n  return async (dispatch) => {\n    try {\n      // Your asynchronous API call to fetch product data here...\n      // You can use Axios or any other library for the API call.\n\n      const productDataPromises = cartItems.map((item) =>\n        axios.get(`https://fakestoreapi.com/products/${item.Id}`)\n      );\n\n      const productDataResponses = await Promise.all(productDataPromises);\n\n      const productsWithData = productDataResponses.map((response, index) => ({\n        ...response.data,\n        quantity: cartItems[index].quantity,\n      }));\n\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_SUCCESS,\n        payload: productsWithData,\n      });\n    } catch (error) {\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_FAILURE,\n        payload: error.message,\n      });\n    }\n  };\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,2BAA2B;AAEvD,OAAO,MAAMC,SAAS,GAAEC,OAAO,IAAG;EAC9B,OAAM;IACFC,IAAI,EAAEH,WAAW,CAACI,WAAW;IAC7BC,OAAO,EAAEH;EACb,CAAC;AAEL,CAAC;AAID,OAAO,MAAMI,4BAA4B,GAAIC,SAAS,IAAK;EACzD,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF;MACA;;MAEA,MAAMC,mBAAmB,GAAGF,SAAS,CAACG,GAAG,CAAEC,IAAI,IAC7CZ,KAAK,CAACa,GAAG,CAAE,qCAAoCD,IAAI,CAACE,EAAG,EAAC,CAC1D,CAAC;MAED,MAAMC,oBAAoB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,mBAAmB,CAAC;MAEnE,MAAMQ,gBAAgB,GAAGH,oBAAoB,CAACJ,GAAG,CAAC,CAACQ,QAAQ,EAAEC,KAAK,MAAM;QACtE,GAAGD,QAAQ,CAACE,IAAI;QAChBC,QAAQ,EAAEd,SAAS,CAACY,KAAK,CAAC,CAACE;MAC7B,CAAC,CAAC,CAAC;MAEHb,QAAQ,CAAC;QACPL,IAAI,EAAEH,WAAW,CAACsB,0BAA0B;QAC5CjB,OAAO,EAAEY;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdf,QAAQ,CAAC;QACPL,IAAI,EAAEH,WAAW,CAACwB,0BAA0B;QAC5CnB,OAAO,EAAEkB,KAAK,CAACE;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}