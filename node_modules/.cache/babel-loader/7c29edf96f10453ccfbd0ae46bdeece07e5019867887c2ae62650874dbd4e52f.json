{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: []\n};\nexport const cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      const existingItem = state.Carts.find(item => item._id === payload._id);\n      console.log(state);\n      if (existingItem) {\n        state.Carts.forEach(item => {\n          if (item._id === payload._id) {\n            item.quantity++;\n          }\n        });\n        return {\n          ...state,\n          numberCart: state.numberCart + 1\n        };\n      } else {\n        const newItem = {\n          ...payload,\n          // payload should contain the complete product data\n          quantity: 1\n        };\n        console.log(payload);\n        console.log(state);\n        return {\n          ...state,\n          Carts: [...state.Carts, newItem],\n          numberCart: state.numberCart + 1\n        };\n      }\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      return {\n        ...state,\n        productData: payload\n      };\n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter(item => item._id !== payload),\n        numberCart: state.numberCart - 1\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","Carts","productData","cartReducer","state","type","payload","GET_NUMBER_CART","ADD_TO_CART","existingItem","find","item","_id","console","log","forEach","quantity","newItem","FETCH_PRODUCT_DATA_SUCCESS","REMOVE_FROM_CART","filter"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/reducers/CartReducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: [],\n}\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      const existingItem = state.Carts.find((item) => item._id === payload._id);\n      console.log(state)\n      if (existingItem) {\n        state.Carts.forEach((item) => {\n          if (item._id === payload._id) {\n            item.quantity++;\n          }\n        });\n        return {\n          ...state,\n          numberCart: state.numberCart + 1,\n        };\n      } else {\n        const newItem = {\n          ...payload, // payload should contain the complete product data\n          quantity: 1,\n        };\n        console.log(payload)\n        console.log(state)\n        return {\n          ...state,\n          Carts: [...state.Carts, newItem],\n          numberCart: state.numberCart + 1,\n        };\n      }\n     \n\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      return {\n        ...state,\n        productData: payload,\n      };\n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter((item) => item._id !== payload),\n        numberCart: state.numberCart - 1,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAEtE,QAAQD,IAAI;IACV,KAAKP,WAAW,CAACS,eAAe;MAC9B,OAAO;QACL,GAAGH;MACL,CAAC;IACH,KAAKN,WAAW,CAACU,WAAW;MAC1B,MAAMC,YAAY,GAAGL,KAAK,CAACH,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,OAAO,CAACM,GAAG,CAAC;MACzEC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;MAClB,IAAIK,YAAY,EAAE;QAChBL,KAAK,CAACH,KAAK,CAACc,OAAO,CAAEJ,IAAI,IAAK;UAC5B,IAAIA,IAAI,CAACC,GAAG,KAAKN,OAAO,CAACM,GAAG,EAAE;YAC5BD,IAAI,CAACK,QAAQ,EAAE;UACjB;QACF,CAAC,CAAC;QACF,OAAO;UACL,GAAGZ,KAAK;UACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH,CAAC,MAAM;QACL,MAAMiB,OAAO,GAAG;UACd,GAAGX,OAAO;UAAE;UACZU,QAAQ,EAAE;QACZ,CAAC;QACDH,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;QACpBO,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;QAClB,OAAO;UACL,GAAGA,KAAK;UACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEgB,OAAO,CAAC;UAChCjB,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH;IAGF,KAAKF,WAAW,CAACoB,0BAA0B;MACzC,OAAO;QACL,GAAGd,KAAK;QACRF,WAAW,EAAEI;MACf,CAAC;IACH,KAAKR,WAAW,CAACqB,gBAAgB;MAC/B,OAAO;QACL,GAAGf,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACmB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,OAAO,CAAC;QACzDN,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACjC,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}