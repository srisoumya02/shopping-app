{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: []\n};\nexport const cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      // Check if the product is already in the cart\n      const existingItem = state.Carts.find(item => {\n        console.log(item._id);\n        console.log(payload._id);\n        return item._id === payload._id;\n      });\n      if (existingItem) {\n        // If the product exists, update its quantity using map\n        return {\n          ...state,\n          Carts: state.Carts.map(item => item._id === payload._id ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item),\n          numberCart: state.numberCart + 1\n        };\n      } else {\n        // If the product is not in the cart, add it\n        const newItem = {\n          ...payload,\n          quantity: 1\n        };\n        console.log(newItem);\n        return {\n          ...state,\n          Carts: [...state.Carts, newItem],\n          numberCart: state.numberCart + 1\n        };\n      }\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      console.log(state);\n      return {\n        ...state,\n        productData: payload\n      };\n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter(item => item._id !== payload),\n        numberCart: state.numberCart - 1\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","Carts","productData","cartReducer","state","type","payload","GET_NUMBER_CART","ADD_TO_CART","existingItem","find","item","console","log","_id","map","quantity","newItem","FETCH_PRODUCT_DATA_SUCCESS","REMOVE_FROM_CART","filter"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/reducers/CartReducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: [],\n}\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n      case ActionTypes.ADD_TO_CART:\n  // Check if the product is already in the cart\n  const existingItem = state.Carts.find(item =>\n    {\n     \n      console.log(item._id)\n      console.log(payload._id)\n      return item._id === payload._id;\n    })\n  if (existingItem) {\n    // If the product exists, update its quantity using map\n    return {\n      ...state,\n      Carts: state.Carts.map(item =>\n        item._id === payload._id ? { ...item, quantity: item.quantity + 1 } : item\n      ),\n      numberCart: state.numberCart + 1,\n    };\n  } else {\n    // If the product is not in the cart, add it\n    const newItem = {\n      ...payload,\n      quantity: 1,\n    };\n    console.log(newItem)\n    return {\n      ...state,\n      Carts: [...state.Carts, newItem],\n      numberCart: state.numberCart + 1,\n    };\n  }\n\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      console.log(state);\n \n\n      return {\n        ...state,\n        productData: payload,\n      };\n     \n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter((item) => item._id !== payload),\n        numberCart: state.numberCart - 1,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAEtE,QAAQD,IAAI;IACV,KAAKP,WAAW,CAACS,eAAe;MAC9B,OAAO;QACL,GAAGH;MACL,CAAC;IACD,KAAKN,WAAW,CAACU,WAAW;MAChC;MACA,MAAMC,YAAY,GAAGL,KAAK,CAACH,KAAK,CAACS,IAAI,CAACC,IAAI,IACxC;QAEEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,GAAG,CAAC;QACrBF,OAAO,CAACC,GAAG,CAACP,OAAO,CAACQ,GAAG,CAAC;QACxB,OAAOH,IAAI,CAACG,GAAG,KAAKR,OAAO,CAACQ,GAAG;MACjC,CAAC,CAAC;MACJ,IAAIL,YAAY,EAAE;QAChB;QACA,OAAO;UACL,GAAGL,KAAK;UACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACc,GAAG,CAACJ,IAAI,IACzBA,IAAI,CAACG,GAAG,KAAKR,OAAO,CAACQ,GAAG,GAAG;YAAE,GAAGH,IAAI;YAAEK,QAAQ,EAAEL,IAAI,CAACK,QAAQ,GAAG;UAAE,CAAC,GAAGL,IACxE,CAAC;UACDX,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMiB,OAAO,GAAG;UACd,GAAGX,OAAO;UACVU,QAAQ,EAAE;QACZ,CAAC;QACDJ,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;QACpB,OAAO;UACL,GAAGb,KAAK;UACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEgB,OAAO,CAAC;UAChCjB,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH;IAEE,KAAKF,WAAW,CAACoB,0BAA0B;MACzCN,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;MAGlB,OAAO;QACL,GAAGA,KAAK;QACRF,WAAW,EAAEI;MACf,CAAC;IAEH,KAAKR,WAAW,CAACqB,gBAAgB;MAC/B,OAAO;QACL,GAAGf,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACmB,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACG,GAAG,KAAKR,OAAO,CAAC;QACzDN,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACjC,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}