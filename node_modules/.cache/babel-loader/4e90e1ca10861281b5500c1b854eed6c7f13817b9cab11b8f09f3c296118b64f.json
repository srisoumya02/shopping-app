{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: []\n};\nexport const cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      //cart is empty no need to check, add product directly\n      if (state.numberCart === 0) {\n        let item = {\n          ...payload,\n          quantity: 1\n        };\n        state.Carts.push(item);\n        console.log(Carts);\n      } else {\n        //cart is not empty, check if the product is already added, yes increase thby 1\n        let check = false;\n        state.Carts.map((item, index) => {\n          if (item._id === payload._id) {\n            state.Carts[index].quantity++;\n            check = true;\n          }\n        });\n        //cart is not empty and adding new product\n        if (!check) {\n          let _item = {\n            ...payload,\n            quantity: 1\n          };\n          console.log(payload);\n          state.Carts.push(_item);\n        }\n      }\n      return {\n        ...state,\n        numberCart: state.numberCart + 1\n      };\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      return {\n        ...state,\n        productData: payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","Carts","productData","cartReducer","state","type","payload","GET_NUMBER_CART","ADD_TO_CART","item","quantity","push","console","log","check","map","index","_id","_item","FETCH_PRODUCT_DATA_SUCCESS"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/reducers/CartReducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n    numberCart: 0,\n    Carts: [],\n    productData: [],\n}\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case ActionTypes.GET_NUMBER_CART:\n            return {\n                ...state\n            };\n        case ActionTypes.ADD_TO_CART:\n            //cart is empty no need to check, add product directly\n            if (state.numberCart === 0) {\n                let item = {\n                    ...payload,\n                    quantity: 1\n                };\n                state.Carts.push(item);\n               console.log(Carts)\n            } else {\n                //cart is not empty, check if the product is already added, yes increase thby 1\n                let check = false;\n                state.Carts.map((item, index) => {\n\n                    if (item._id === payload._id) {\n                        state.Carts[index].quantity++;\n                        check = true;\n                    }\n                });\n                //cart is not empty and adding new product\n                if (!check) {\n                    let _item = {\n                        ...payload,\n                        quantity: 1\n                    }\n                    console.log(payload)\n                    state.Carts.push(_item);\n                }\n            }\n            return {\n                ...state,\n                numberCart: state.numberCart + 1\n            }\n        case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n            return {\n                ...state,\n                productData: payload,\n            };\n\n        default:\n            return state\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACpE,QAAQD,IAAI;IACR,KAAKP,WAAW,CAACS,eAAe;MAC5B,OAAO;QACH,GAAGH;MACP,CAAC;IACL,KAAKN,WAAW,CAACU,WAAW;MACxB;MACA,IAAIJ,KAAK,CAACJ,UAAU,KAAK,CAAC,EAAE;QACxB,IAAIS,IAAI,GAAG;UACP,GAAGH,OAAO;UACVI,QAAQ,EAAE;QACd,CAAC;QACDN,KAAK,CAACH,KAAK,CAACU,IAAI,CAACF,IAAI,CAAC;QACvBG,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MACrB,CAAC,MAAM;QACH;QACA,IAAIa,KAAK,GAAG,KAAK;QACjBV,KAAK,CAACH,KAAK,CAACc,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,KAAK;UAE7B,IAAIP,IAAI,CAACQ,GAAG,KAAKX,OAAO,CAACW,GAAG,EAAE;YAC1Bb,KAAK,CAACH,KAAK,CAACe,KAAK,CAAC,CAACN,QAAQ,EAAE;YAC7BI,KAAK,GAAG,IAAI;UAChB;QACJ,CAAC,CAAC;QACF;QACA,IAAI,CAACA,KAAK,EAAE;UACR,IAAII,KAAK,GAAG;YACR,GAAGZ,OAAO;YACVI,QAAQ,EAAE;UACd,CAAC;UACDE,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;UACpBF,KAAK,CAACH,KAAK,CAACU,IAAI,CAACO,KAAK,CAAC;QAC3B;MACJ;MACA,OAAO;QACH,GAAGd,KAAK;QACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACnC,CAAC;IACL,KAAKF,WAAW,CAACqB,0BAA0B;MACvC,OAAO;QACH,GAAGf,KAAK;QACRF,WAAW,EAAEI;MACjB,CAAC;IAEL;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}