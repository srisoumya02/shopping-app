{"ast":null,"code":"import axios from \"axios\";\nimport Endpoints from \"../../apis/Endpoints\";\nimport { ActionTypes } from \"../constants/action-types\";\nexport const addToCart = product => {\n  return {\n    type: ActionTypes.ADD_TO_CART,\n    payload: product\n  };\n};\nexport const fetchProductDataForCartItems = Carts => {\n  return async dispatch => {\n    try {\n      // Extract the product IDs from the cartItems array\n      const productIds = cartItems.map(item => item.id);\n\n      // Make API calls to fetch product data for each product ID\n      const productDataPromises = productIds.map(productId => axios.get(Endpoints.PRODUCTS_URL + productId));\n\n      // Wait for all API calls to resolve\n      const productDataResponses = await Promise.all(productDataPromises);\n\n      // Extract the data from the API responses\n      const productsWithData = productDataResponses.map(response => response.data);\n\n      // Update the Redux store with the fetched product data\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_SUCCESS,\n        payload: productsWithData\n      });\n    } catch (error) {\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","Endpoints","ActionTypes","addToCart","product","type","ADD_TO_CART","payload","fetchProductDataForCartItems","Carts","dispatch","productIds","cartItems","map","item","id","productDataPromises","productId","get","PRODUCTS_URL","productDataResponses","Promise","all","productsWithData","response","data","FETCH_PRODUCT_DATA_SUCCESS","error","FETCH_PRODUCT_DATA_FAILURE","message"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/actions/cart-actions.js"],"sourcesContent":["import axios from \"axios\";\nimport Endpoints from \"../../apis/Endpoints\";\nimport { ActionTypes } from \"../constants/action-types\"\n\nexport const addToCart = (product) => {\n  return {\n    type: ActionTypes.ADD_TO_CART,\n    payload: product\n  }\n\n}\n\n\nexport const fetchProductDataForCartItems = (Carts) => {\n  return async (dispatch) => {\n    try {\n      // Extract the product IDs from the cartItems array\n      const productIds = cartItems.map((item) => item.id);\n\n      // Make API calls to fetch product data for each product ID\n      const productDataPromises = productIds.map((productId) =>\n        axios.get(Endpoints.PRODUCTS_URL + productId)\n      );\n\n      // Wait for all API calls to resolve\n      const productDataResponses = await Promise.all(productDataPromises);\n\n      // Extract the data from the API responses\n      const productsWithData = productDataResponses.map((response) => response.data);\n\n      // Update the Redux store with the fetched product data\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_SUCCESS,\n        payload: productsWithData,\n      });\n    } catch (error) {\n      dispatch({\n        type: ActionTypes.FETCH_PRODUCT_DATA_FAILURE,\n        payload: error.message,\n      });\n    }\n  };\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,WAAW,QAAQ,2BAA2B;AAEvD,OAAO,MAAMC,SAAS,GAAIC,OAAO,IAAK;EACpC,OAAO;IACLC,IAAI,EAAEH,WAAW,CAACI,WAAW;IAC7BC,OAAO,EAAEH;EACX,CAAC;AAEH,CAAC;AAGD,OAAO,MAAMI,4BAA4B,GAAIC,KAAK,IAAK;EACrD,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF;MACA,MAAMC,UAAU,GAAGC,SAAS,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,CAAC;;MAEnD;MACA,MAAMC,mBAAmB,GAAGL,UAAU,CAACE,GAAG,CAAEI,SAAS,IACnDjB,KAAK,CAACkB,GAAG,CAACjB,SAAS,CAACkB,YAAY,GAAGF,SAAS,CAC9C,CAAC;;MAED;MACA,MAAMG,oBAAoB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,mBAAmB,CAAC;;MAEnE;MACA,MAAMO,gBAAgB,GAAGH,oBAAoB,CAACP,GAAG,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;;MAE9E;MACAf,QAAQ,CAAC;QACPL,IAAI,EAAEH,WAAW,CAACwB,0BAA0B;QAC5CnB,OAAO,EAAEgB;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdjB,QAAQ,CAAC;QACPL,IAAI,EAAEH,WAAW,CAAC0B,0BAA0B;QAC5CrB,OAAO,EAAEoB,KAAK,CAACE;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}