{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: []\n};\nexport const cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  console.log(state);\n  console.log(payload);\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      if (state.Carts.length === 0) {\n        // If the cart is empty, add the new product as a new item\n        const newItem = {\n          ...payload,\n          quantity: 1\n        };\n        console.log(newItem);\n        return {\n          ...state,\n          Carts: [newItem],\n          numberCart: state.numberCart + 1\n        };\n      } else {\n        // Check if the product with the same _id exists in the cart\n\n        const existingItem = state.Carts.find(item => {\n          console.log(item.id);\n          console.log(payload.id);\n          return item.id === payload.id;\n        });\n        if (existingItem) {\n          // If the product exists, update its quantity using map\n          console.log(state);\n          return {\n            ...state,\n            Carts: state.Carts.map(item => item._id === payload._id ? {\n              ...item,\n              quantity: item.quantity + 1\n            } : item),\n            numberCart: state.numberCart + 1\n          };\n        } else {\n          // If the product is not in the cart, add it as a new item\n\n          const newItem = {\n            ...payload,\n            quantity: 1\n          };\n          console.log(state);\n          return {\n            ...state,\n            Carts: [...state.Carts, newItem],\n            numberCart: state.numberCart + 1\n          };\n        }\n      }\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      console.log(state);\n      return {\n        ...state,\n        productData: payload\n      };\n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter(item => item._id !== payload),\n        numberCart: state.numberCart - 1\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","Carts","productData","cartReducer","state","type","payload","console","log","GET_NUMBER_CART","ADD_TO_CART","length","newItem","quantity","existingItem","find","item","id","map","_id","FETCH_PRODUCT_DATA_SUCCESS","REMOVE_FROM_CART","filter"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/reducers/CartReducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: [],\n}\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n  console.log(state)\n  console.log(payload)\n  \n\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n      case ActionTypes.ADD_TO_CART:\n       \n          if (state.Carts.length === 0) {\n            // If the cart is empty, add the new product as a new item\n            const newItem = {\n              ...payload,\n              quantity: 1,\n            };\n            console.log(newItem)\n            return {\n              ...state,\n              Carts: [newItem],\n              numberCart: state.numberCart + 1,\n            };\n          } else {\n            // Check if the product with the same _id exists in the cart\n            \n\n            const existingItem = state.Carts.find(item =>{\n              console.log(item.id);\n              console.log(payload.id);\n              return (item.id === payload.id)\n            } );\n        \n            if (existingItem) {\n              // If the product exists, update its quantity using map\n              console.log(state)\n              return {\n                ...state,\n                Carts: state.Carts.map(item =>\n                  item._id === payload._id ? { ...item, quantity: item.quantity + 1 } : item\n                ),\n                numberCart: state.numberCart + 1,\n              };\n            } else {\n              // If the product is not in the cart, add it as a new item\n            \n              const newItem = {\n                ...payload,\n                quantity: 1,\n              };\n              console.log(state)\n              return {\n                ...state,\n                Carts: [...state.Carts, newItem],\n                numberCart: state.numberCart + 1,\n              };\n             \n            }\n          }\n        \n\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      console.log(state);\n \n\n      return {\n        ...state,\n        productData: payload,\n      };\n     \n    case ActionTypes.REMOVE_FROM_CART:\n      return {\n        ...state,\n        Carts: state.Carts.filter((item) => item._id !== payload),\n        numberCart: state.numberCart - 1,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACtEC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClBG,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EAGpB,QAAQD,IAAI;IACV,KAAKP,WAAW,CAACW,eAAe;MAC9B,OAAO;QACL,GAAGL;MACL,CAAC;IACD,KAAKN,WAAW,CAACY,WAAW;MAExB,IAAIN,KAAK,CAACH,KAAK,CAACU,MAAM,KAAK,CAAC,EAAE;QAC5B;QACA,MAAMC,OAAO,GAAG;UACd,GAAGN,OAAO;UACVO,QAAQ,EAAE;QACZ,CAAC;QACDN,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;QACpB,OAAO;UACL,GAAGR,KAAK;UACRH,KAAK,EAAE,CAACW,OAAO,CAAC;UAChBZ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH,CAAC,MAAM;QACL;;QAGA,MAAMc,YAAY,GAAGV,KAAK,CAACH,KAAK,CAACc,IAAI,CAACC,IAAI,IAAG;UAC3CT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACC,EAAE,CAAC;UACpBV,OAAO,CAACC,GAAG,CAACF,OAAO,CAACW,EAAE,CAAC;UACvB,OAAQD,IAAI,CAACC,EAAE,KAAKX,OAAO,CAACW,EAAE;QAChC,CAAE,CAAC;QAEH,IAAIH,YAAY,EAAE;UAChB;UACAP,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;UAClB,OAAO;YACL,GAAGA,KAAK;YACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACiB,GAAG,CAACF,IAAI,IACzBA,IAAI,CAACG,GAAG,KAAKb,OAAO,CAACa,GAAG,GAAG;cAAE,GAAGH,IAAI;cAAEH,QAAQ,EAAEG,IAAI,CAACH,QAAQ,GAAG;YAAE,CAAC,GAAGG,IACxE,CAAC;YACDhB,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;UACjC,CAAC;QACH,CAAC,MAAM;UACL;;UAEA,MAAMY,OAAO,GAAG;YACd,GAAGN,OAAO;YACVO,QAAQ,EAAE;UACZ,CAAC;UACDN,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;UAClB,OAAO;YACL,GAAGA,KAAK;YACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEW,OAAO,CAAC;YAChCZ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;UACjC,CAAC;QAEH;MACF;IAGN,KAAKF,WAAW,CAACsB,0BAA0B;MACzCb,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;MAGlB,OAAO;QACL,GAAGA,KAAK;QACRF,WAAW,EAAEI;MACf,CAAC;IAEH,KAAKR,WAAW,CAACuB,gBAAgB;MAC/B,OAAO;QACL,GAAGjB,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACqB,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACG,GAAG,KAAKb,OAAO,CAAC;QACzDN,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;MACjC,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}