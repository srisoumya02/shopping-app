{"ast":null,"code":"import { ActionTypes } from \"../constants/action-types\";\nconst initialState = {\n  numberCart: 0,\n  Carts: [],\n  productData: []\n};\nexport const cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ActionTypes.GET_NUMBER_CART:\n      return {\n        ...state\n      };\n    case ActionTypes.ADD_TO_CART:\n      const existingItem = state.Carts.find(item => item._id === payload._id);\n      if (existingItem) {\n        state.Carts.forEach(item => {\n          if (item._id === payload._id) {\n            item.quantity++;\n          }\n        });\n        return {\n          ...state,\n          numberCart: state.numberCart + 1\n        };\n      } else {\n        const newItem = {\n          ...payload,\n          // payload should contain the complete product data\n          quantity: 1\n        };\n        return {\n          ...state,\n          Carts: [...state.Carts, newItem],\n          numberCart: state.numberCart + 1\n        };\n      }\n    case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n      return {\n        ...state,\n        productData: payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionTypes","initialState","numberCart","Carts","productData","cartReducer","state","type","payload","GET_NUMBER_CART","ADD_TO_CART","existingItem","find","item","_id","forEach","quantity","newItem","FETCH_PRODUCT_DATA_SUCCESS"],"sources":["/Users/vivek/Documents/GitHub/shopping-app/src/Redux/reducers/CartReducer.js"],"sourcesContent":["import { ActionTypes } from \"../constants/action-types\"\n\nconst initialState = {\n    numberCart: 0,\n    Carts: [],\n    productData: [],\n}\n\nexport const cartReducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case ActionTypes.GET_NUMBER_CART:\n            return {\n                ...state\n            };\n            case ActionTypes.ADD_TO_CART:\n                const existingItem = state.Carts.find((item) => item._id === payload._id);\n              \n                if (existingItem) {\n                  state.Carts.forEach((item) => {\n                    if (item._id === payload._id) {\n                      item.quantity++;\n                    }\n                  });\n                  return {\n                    ...state,\n                    numberCart: state.numberCart + 1,\n                  };\n                } else {\n                  const newItem = {\n                    ...payload, // payload should contain the complete product data\n                    quantity: 1,\n                  };\n                  return {\n                    ...state,\n                    Carts: [...state.Carts, newItem],\n                    numberCart: state.numberCart + 1,\n                  };\n                }\n              \n\n        case ActionTypes.FETCH_PRODUCT_DATA_SUCCESS:\n            return {\n                ...state,\n                productData: payload,\n            };\n\n        default:\n            return state;\n    }\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,2BAA2B;AAEvD,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAE;EAAEM,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACpE,QAAQD,IAAI;IACR,KAAKP,WAAW,CAACS,eAAe;MAC5B,OAAO;QACH,GAAGH;MACP,CAAC;IACD,KAAKN,WAAW,CAACU,WAAW;MACxB,MAAMC,YAAY,GAAGL,KAAK,CAACH,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKN,OAAO,CAACM,GAAG,CAAC;MAEzE,IAAIH,YAAY,EAAE;QAChBL,KAAK,CAACH,KAAK,CAACY,OAAO,CAAEF,IAAI,IAAK;UAC5B,IAAIA,IAAI,CAACC,GAAG,KAAKN,OAAO,CAACM,GAAG,EAAE;YAC5BD,IAAI,CAACG,QAAQ,EAAE;UACjB;QACF,CAAC,CAAC;QACF,OAAO;UACL,GAAGV,KAAK;UACRJ,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH,CAAC,MAAM;QACL,MAAMe,OAAO,GAAG;UACd,GAAGT,OAAO;UAAE;UACZQ,QAAQ,EAAE;QACZ,CAAC;QACD,OAAO;UACL,GAAGV,KAAK;UACRH,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAK,EAAEc,OAAO,CAAC;UAChCf,UAAU,EAAEI,KAAK,CAACJ,UAAU,GAAG;QACjC,CAAC;MACH;IAGR,KAAKF,WAAW,CAACkB,0BAA0B;MACvC,OAAO;QACH,GAAGZ,KAAK;QACRF,WAAW,EAAEI;MACjB,CAAC;IAEL;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}